#ifndef GLOBALS_H
#define GLOBALS_H


#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "sleep.h"
#include "SpeedSensor_IP.h"
#include "xtmrctr.h"
#include "xparameters.h"
#include "xil_types.h"
#include "xgpiops.h"
#include "xiicps.h"
#include "xinterrupt_wrap.h"
#include "xgpio.h"
#include "HC_SR04_IP.h"
#include "xscugic.h"
#include "xil_exception.h"

#define EXIT_FAILURE					1

// GPIO
#define GPIO_BTN_SWS_ID					XPAR_GPIO_BTNS_SWS_DEVICE_ID
#define GPIO_LEDS_RGB_ID				XPAR_GPIO_LEDS_RGB_DEVICE_ID
#define LEDS_CHANNEL 					1
#define RGB_CHANNEL 					2
#define BTNS_CHANNEL 					1
#define SWS_CHANNEL 					2

// PWM
#define AXI_TIMER_ID_1					XPAR_AXI_TIMER_0_DEVICE_ID
#define AXI_TIMER_ID_2					XPAR_AXI_TIMER_1_DEVICE_ID
#define AXI_TIMER_ID_3					XPAR_AXI_TIMER_2_DEVICE_ID
#define AXI_TIMER_ID_4					XPAR_AXI_TIMER_3_DEVICE_ID
#define PWM_PERIOD              		5000000    						// PWM period in (5 ms)
#define DUTYCYCLE_DIVISOR		      	2            					// Duty cycle Divisor
#define PWM_CYCLE_1						0.5
#define PWM_CYCLE_1						0.7
#define PWM_CYCLE_1						0.8
#define PWM_CYCLE_1						0.9

// IIC
#define IIC_DEVICE_ID					XPAR_PS7_I2C_0_DEVICE_ID
#define IIC_SLAVE_ADDR					0x68
#define IIC_SCLK_RATE					400000

// INTERRUPTS
#define INTC_DEVICE_ID					XPAR_PS7_SCUGIC_0_DEVICE_ID
#define GPIO_INTR_MPU_ID				XPAR_GPIO_INTR_MPU_DEVICE_ID
#define INTC_MPU_INTR_ID				XPAR_FABRIC_GPIO_INTR_MPU_IP2INTC_IRPT_INTR
#define MPU_INT_MASK					XGPIO_IR_CH1_MASK

// MPU Corrections
#define ACC_X_CORRECTION				500  	// -500
#define ACC_Y_CORRECTION				1500 	// -1500
#define ACC_Z_CORRECTION				2000 	// -2000
#define GYR_X_CORRECTION				100		// +100
#define GYR_Y_CORRECTION				100		// +100
#define GYR_Z_CORRECTION				30		// -30

// Instances
XTmrCtr 	TimerCounterInst_4;
XTmrCtr 	TimerCounterInst_3;
XTmrCtr 	TimerCounterInst_2;
XTmrCtr 	TimerCounterInst_1;
XIicPs 		Iic;
XGpio		gpio_in;
XGpio		gpio_out;
XGpio		gpio_intr;
XScuGic		intc_mpu;

// MPU
u8 MPU_wake_up_data[] = {0x6B,0};		// Wake up device
u8 MPU_read_accx[1] =  {0x3B};		 	// MPU6050 ACCEL_XOUT_H register address
u8 MPU_buffer[14]; 						// 14 bytes (Accel + Gyro + Temp)

// Speedsensor data
typedef struct
{
    uint32_t speed;
    uint32_t distance;
}Speed_Sensor_data;

// MPU data
typedef struct
{
	int16_t acc_x;
	int16_t acc_y;
	int16_t acc_z;
	int16_t gy_x;
	int16_t gy_y;
	int16_t gy_z;
	int16_t temp;
}MPU_data;

// Ultrasonic sensor data
typedef struct
{
	uint32_t left;
	uint32_t right;
}Ultra_Sensor_data;

// Globals
u32 highTime;
u32 rv;
Speed_Sensor_data speed_data_1;
Speed_Sensor_data speed_data_2;
Ultra_Sensor_data ultra_data;
MPU_data mpu_data;


#endif
