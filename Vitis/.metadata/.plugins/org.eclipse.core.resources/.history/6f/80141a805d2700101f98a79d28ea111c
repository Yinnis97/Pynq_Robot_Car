#ifndef GLOBALS_H
#define GLOBALS_H


#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "sleep.h"
#include "SpeedSensor_IP.h"
#include "xtmrctr.h"
#include "xparameters.h"
#include "xil_types.h"
#include "xgpiops.h"
#include "xiicps.h"
#include "xinterrupt_wrap.h"

// TIMER/PWM
#define AXI_TIMER_ID_1					XPAR_AXI_TIMER_0_DEVICE_ID
#define AXI_TIMER_ID_2					XPAR_AXI_TIMER_1_DEVICE_ID
#define AXI_TIMER_ID_3					XPAR_AXI_TIMER_2_DEVICE_ID
#define AXI_TIMER_ID_4					XPAR_AXI_TIMER_3_DEVICE_ID
#define PWM_PERIOD              		5000000    		// PWM period in (5 ms)
#define DUTYCYCLE_DIVISOR		      	2            	// Duty cycle Divisor

// IIC
#define IIC_DEVICE_ID					XPAR_PS7_I2C_0_DEVICE_ID
#define INTC_DEVICE_ID					XPAR_SCUGIC_SINGLE_DEVICE_ID
#define IIC_INT_VEC_ID					XPAR_XIICPS_0_INTR
#define MPU6050_ADDR			 		0x68
#define IIC_SLAVE_ADDR					0x68
#define IIC_SCLK_RATE					100000

// Instances
XTmrCtr 	TimerCounterInst_4;
XTmrCtr 	TimerCounterInst_3;
XTmrCtr 	TimerCounterInst_2;
XTmrCtr 	TimerCounterInst_1;
XIicPs 		Iic;

u8 MPU_intialization[] = {0x6B,0};
u8 msgp;
u8 iic_buffer[14];

// Speedsensor data
typedef struct
{
    uint32_t speed;
    uint32_t distance;
}S_Sensor_data;

// MPU data
typedef struct
{
	uint16_t acc_x;
	uint16_t acc_y;
	uint16_t acc_z;

}MPU_data;

#endif
